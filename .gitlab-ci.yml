---
stages:
  - syntax
  - unit
  - check
  - build
  - release
variables:
  GIT_CLEAN_FLAGS: '-x -f -e vendor/bundle'

cache:
  paths:
    - vendor/bundle

before_script:
  - bundle -v
  - rm Gemfile.lock || true
  - "# Update system gems if requested. This is useful to temporarily workaround troubles in the test runner"
  - "# Set `rubygems_version` in the .sync.yml to set a value"
  - "# Ignore exit code of SIGPIPE'd yes to not fail with shell's pipefail set"
  - '[ -z "$RUBYGEMS_VERSION" ] || (yes || true) | gem update --system $RUBYGEMS_VERSION'
  - gem --version
  - bundle -v
  - bundle install --without system_tests --path vendor/bundle --jobs $(nproc)

syntax lint metadata_lint check:symlinks check:git_ignore check:dot_underscore check:test_file rubocop-Ruby 2.5.7-Puppet ~> 6:
  stage: syntax
  image: ruby:2.5.7
  script:
    - bundle exec rake syntax lint metadata_lint check:symlinks check:git_ignore check:dot_underscore check:test_file rubocop
  variables:
    PUPPET_GEM_VERSION: '~> 6'

parallel_spec-Ruby 2.5.7-Puppet ~> 6:
  stage: unit
  image: ruby:2.5.7
  script:
    - bundle exec rake parallel_spec
  variables:
    PUPPET_GEM_VERSION: '~> 6'

parallel_spec-Ruby 2.4.5-Puppet ~> 5:
  stage: unit
  image: ruby:2.4.5
  script:
    - bundle exec rake parallel_spec
  variables:
    PUPPET_GEM_VERSION: '~> 5'

Build:
  stage: build
  image: ruby:2.5.7
  script:
  - rm -rf pkg/*
  - bundle exec pdk build --force --debug
  artifacts:
    paths:
    - pkg/*
Release:
  stage: release
  image: ruby:2.5.7
  script:
  - bundle exec pdk release --force --skip-publish --skip-changelog
  - curl -F "file=@pkg/obcore-x509-$(jq -r .version < metadata.json).tar.gz" http://forge.obcore.net/upload
    | grep 'File has been uploaded'
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: manual
    allow_failure: true
  - if: $CI_COMMIT_BRANCH == "master"

